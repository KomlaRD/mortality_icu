---
title: "Data analysis"
author: "Eric Anku"
format: html
---
# Import libraries and data
```{r load-libraries}
pacman::p_load(
  rio, # Import and Export data
  gtsummary, # Table summaries
  dplyr, # Data management
  tidyr, # Pivot 
  here, # File management
  ggstatsplot, # Statistical plots
  ggplot2, # Visualisation
  stringr # Manipulate string
)
```

```{r import-data}
df <- import(here("data", "clean_data", "clean_data.csv"))
```

# Normality test

```{r normality-test}
# Function to perform Shapiro-Wilk test and extract p-value
shapiro_test <- function(x) {
  shapiro_result <- shapiro.test(x)
  return(shapiro_result$p.value)
}

# Extract numeric variables from the dataset
numeric_vars <- df |>
  select_if(is.numeric)

# Apply the Shapiro-Wilk test to each numeric variable and tidy the results
shapiro_p_values <- numeric_vars %>%
  summarise(across(everything(), ~ shapiro_test(.))) %>%
  pivot_longer(everything(), names_to = "Variable", values_to = "P_Value")

# Display the p-values
print("Shapiro values for normality testing")
print(shapiro_p_values)
```

# Table summaries
```{r table-summary}
df |>
  select(-c("admission_date", "discharge_date", "referral_others_specify", "diagnosis",
  "comorbidities", "discharge_dayofweek", "discharge_month",
  "discharge_year",
  "intubated"
  )) |>
  tbl_summary(
    missing_text = "Unkwown",
    type = all_dichotomous() ~ "categorical"
  ) |> add_ci(include = c(mortality))
```

```{r}
df |>
  select(-c("admission_date", "discharge_date", "referral_others_specify", "diagnosis")) |>
  tbl_summary(by = "mortality") |>
  add_p() |>
  bold_labels() |>
  bold_p()
```

```{r}
df |>
  select(c("mortality",
  "discharge_year")) |>
  tbl_summary(by = "discharge_year") |>
  add_p() |>
  bold_labels() |>
  bold_p()
```

# Analysis of variance

```{r age-anova}
age_aov <- aov(df$age_numeric ~ df$mortality)
summary(age_aov)
```


```{r los-anova}
los_aov <- aov(df$length_of_stay_days ~ df$mortality)
summary(los_aov)
```


```{r gcs-anova}
gcs_aov <- aov(df$gcs_cleaned ~ df$mortality)
summary(gcs_aov)
```

# Plots


```{r plot-referral-sources}
ggcorrmat(
  data     = numeric_vars,
  colors   = c("#B2182B", "white", "#4D4D4D"),
  title    = "Correlation matrix",
)
```


```{r plot-diagnosis}
# Step 1: Clean and extract diagnosis codes and descriptions
diagnosis_cleaned <- df %>%
  # Split entries by comma (but preserve the code-description pair)
  mutate(diagnosis = str_split(diagnosis, ",\\s*(?=[A-Z][0-9]{2}(?:\\.[0-9]{1,2})?\\s-\\s)")) %>%
  unnest(diagnosis) %>%
  # Trim whitespace
  mutate(diagnosis = str_trim(diagnosis)) %>%
  # Extract valid ICD-code and description pairs
  filter(str_detect(diagnosis, "^[A-Z][0-9]{2}(?:\\.[0-9]{1,2})?\\s-\\s.+")) %>%
  distinct()  # remove exact duplicates

# Step 2: Count frequency and compute percentage
diagnosis_frequency <- diagnosis_cleaned %>%
  count(diagnosis, sort = TRUE) %>%
  slice_max(n, n = 10) %>%
  mutate(percentage = (n / sum(n)) * 100)

# Step 3: Improved Plot
p1 <- ggplot(diagnosis_frequency, aes(y = reorder(diagnosis, percentage), x = percentage)) +
  geom_bar(stat = "identity", fill = "#0072B2", width = 0.7) +
  geom_text(aes(label = sprintf("%.1f%%", percentage)), hjust = -0.1, size = 3.5) +
  labs(
    y = "Diagnosis",
    x = "Percentage",
    title = "Top 10 ICU Diagnoses"
  ) +
  scale_x_continuous(labels = scales::percent_format(scale = 1),
                     expand = expansion(mult = c(0, 0.3))) +  # increased space to the right
  theme_bw(base_size = 12) +
  theme(
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    panel.border = element_blank(),
    axis.line = element_line(color = "#0072B2"),
    axis.text.y = element_text(color = "black", size = 10),  # slightly smaller text for long labels
    axis.text.x = element_text(color = "black", size = 11),
    axis.title = element_text(color = "black", size = 12, face = "bold"),
    plot.title = element_text(hjust = 0.5, size = 14, face = "bold"),
    plot.margin = margin(t = 10, r = 60, b = 10, l = 20)  # increased right margin
  )

# Print the plot
p1
```