---
title: "Data wrangling"
author: "Eric Anku"
format: html
---

```{r load-libraries}
pacman::p_load(
  rio, # Load dataset
  janitor, # Clean column names,
  tidyverse, # data wrangling
  here # Relative path
)
```

```{r import-dataset}
df_2019 <- import(here("data","df_2019.xlsx"), skip_rows =3)
df_2020 <- import(here("data", "df_2020.xlsx"), skip = 3)
df_2021 <- import(here("data", "df_2021.xlsx"), skip_rows =3)
df_2022 <- import(here("data", "df_2022.xlsx"), skip =3)
df_2023 <- import(here("data", "df_2023.xlsx"), skip =3)
df_register <- import(here("data", "test_data_new.xlsx"))
```

```{r merge-dataset}
#| Label: Merge datasets

df1 <- bind_rows(df_2019, df_2020, df_2021, df_2022, df_2023)

# Clean names
df1 <- clean_names(df1)

# Rename patient_no to patient_number
df1 <- df1 |>
  rename(
    "patient_number" = patient_no
  )
```

```{r remove-non-relevant-features}
# Clean names and remove non-relevant features
df_register <- df_register |>
  clean_names() |>
  select(-c(
    start,
    end,
    comments,
    id,
    uuid,
    submission_time,
    validation_status,
    notes,
    status,
    submiited_by,
    version,
    tags,
    index
  ))
```

```{r duplicate-records-readmission}
df_duplicates <- get_dupes(df1, patient_number)
```

```{r distinct-patient}
df_unique <- 
  df1 |>
  distinct(
    patient_number, .keep_all = TRUE
  )
```


```{r merge-ehr-register}
df <- merge(df1, df_register, by = "patient_number")
```

```{r remove-identifiers}
df |>
  select(
    -c(
      patient_number,
      patient_name,
      visit_no,
      ward_room,
      sr_no
    )
  )
```

```{r duplicate-analyse}
# Function to analyse duplicates
name_analyser <- 
  function(name) {
    df_duplicates |>
    filter(patient_name == name)
}
```


```{r}
name_analyser("Enter name here")
```



